function auto_tabdet()
    close all; clc;

    % 1. Wczytaj obraz
    img = imread('car2.jpg'); % lub inny obraz
    img_gray = rgb2gray(img);

    % 2. Binaryzacja – próg jasności
    bin = img_gray > 150 & img_gray < 255; % dostosuj wartości!
    figure; imshow(bin); title('Maska binarna jasnych obszarów');

    % 3. Morfologia – usuwanie szumów i wypełnienie
    bin_clean = bwareaopen(bin, 100); % usuń małe obszary
    bin_fill = imfill(bin_clean, 'holes'); % wypełnij dziury
    se = strel('rectangle', [3,7]);
    bin_close = imclose(bin_fill, se);
    figure; imshow(bin_close); title('Po morfologii');

    % 4. Etykietowanie
    [L, num] = bwlabel(bin_close);
    props = regionprops(L, 'BoundingBox', 'Area', 'Eccentricity', 'Extent');

    % 5. Wybór tablicy – na podstawie cech
    best_idx = 0;
    for i = 1:num
        bb = props(i).BoundingBox;
        ratio = bb(3) / bb(4); % szerokość / wysokość
        if ratio > 2 && ratio < 6 && props(i).Area > 1000 && props(i).Extent > 0.5
            best_idx = i;
            break;
        end
    end

    % 6. Wyodrębnienie maski tablicy
    if best_idx > 0
        tablica_maska = (L == best_idx);
        figure; imshow(tablica_maska); title('Maska tablicy');
    else
        error('Nie znaleziono tablicy!');
    end

    % 7. Wymnożenie z oryginałem
    img_tablica = img;
    for c = 1:3
        temp = img(:,:,c);
        temp(~tablica_maska) = 255; % tło na biało
        img_tablica(:,:,c) = temp;
    end
    figure; imshow(img_tablica); title('Wymnożenie z maską');

    % 8. Wycięcie i zapis
    [y, x] = find(tablica_maska);
    x1 = min(x); x2 = max(x);
    y1 = min(y); y2 = max(y);
    tab_crop = img_tablica(y1:y2, x1:x2, :);
    figure; imshow(tab_crop); title('Wycięta tablica');
    imwrite(tab_crop, 'tab_dop.jpg');

    % (opcjonalnie) 9. Usuwanie liter – np. ręcznie: imcontrast() + maskowanie

    % 10. Dopasowanie do wzorca (reg_AT_MI.m)
    % zakładając, że masz: tab_dop.jpg, tab_wz.jpg
end

auto_tabdet,
